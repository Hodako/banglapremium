// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  customer
  admin
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole  @default(customer)
  accounts      Account[]
  orders        Order[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id          String    @id @default(cuid())
  name        String    @unique
  slug        String    @unique
  description String?
  imageUrl    String?
  imageHint   String?
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Product {
  id              String      @id @default(cuid())
  name            String
  slug            String      @unique
  description     String?
  longDescription String?
  price           Decimal     @db.Decimal(10, 2)
  originalPrice   Decimal?    @db.Decimal(10, 2)
  imageUrl        String?
  imageHint       String?
  categoryId      String?
  category        Category?   @relation(fields: [categoryId], references: [id])
  isFeatured      Boolean     @default(false)
  isBestSelling   Boolean     @default(false)
  releaseDate     DateTime?
  orderItems      OrderItem[]
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

enum OrderStatus {
  Pending
  Processing
  Completed
  Failed
  Delivered
}

model Order {
  id            String      @id @default(cuid())
  userId        String?
  user          User?       @relation(fields: [userId], references: [id])
  total         Decimal     @db.Decimal(10, 2)
  status        OrderStatus @default(Pending)
  transactionId String?
  items         OrderItem[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model OrderItem {
  id             String   @id @default(cuid())
  orderId        String
  order          Order    @relation(fields: [orderId], references: [id])
  productId      String
  product        Product  @relation(fields: [productId], references: [id])
  quantity       Int
  recipientEmail String?
  price          Decimal  @db.Decimal(10, 2)
  createdAt      DateTime @default(now())
}
